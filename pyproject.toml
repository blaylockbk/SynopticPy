[project]
name = "SynopticPy"
description = "Retrieve mesonet weather data as Polars DataFrames from Synoptic's Weather API."
readme = "README.md"
requires-python = ">=3.11"
# NOTE: 3.9 doesn't work because I'm using some new typing syntax
# NOTE: 3.10 doesn't work because I'm using `from datetime import UTC`
# NOTE: 3.10 doesn't work because I'm using tomllib, which was introduced in 3.11
license = { file = "LICENSE" }
authors = [{ name = "Brian K. Blaylock", email = "blaylockbk@gmail.com" }]
maintainers = [{ name = "Brian K. Blaylock", email = "blaylockbk@gmail.com" }]
classifiers = [
    "Development Status :: 4 - Beta",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Operating System :: MacOS",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX :: Linux",
    "License :: OSI Approved :: MIT License",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Atmospheric Science",
]
keywords = ["weather", "meteorology", "mesonet", "atmosphere"]
dependencies = [
    "numpy",
    "polars[style,plot,timezone]>=1.9.0",
    "requests",
    "toml",
]
dynamic = ["version"]

[project.urls]
"Homepage" = "https://github.com/blaylockbk/SynopticPy"
"Documentation" = "https://synopticpy.readthedocs.io/"
"Repository" = "https://github.com/blaylockbk/SynopticPy"
"Changelog" = "https://github.com/blaylockbk/SynopticPy/releases"
"Bug Tracker" = "https://github.com/blaylockbk/SynopticPy/issues"

[project.optional-dependencies]
extras = [
    "altair",      # Plotting
    "cartopy",     # Plotting
    "herbie-data", # Need the Cartopy plotting EasyMap
    "matplotlib",  # Plotting
    "metpy",
    "pyarrow",     # Write to Parquet with pyarrow
    "seaborn",     # Plotting
]

docs = [
    "autodocsumm",
    "esbonio",
    "ipython",
    "linkify-it-py",
    "myst-parser",
    "nbconvert",
    "nbsphinx",
    "sphinx-copybutton",
    "pydata-sphinx-theme",
    "recommonmark",
    "sphinx",
    "sphinx-autosummary-accessors",
    "sphinx-design",
    "sphinx-markdown-tables",
    "sphinxcontrib-mermaid",
]
test = ["pytest", "pytest-cov", "ruff"]

[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"


[tool.hatch]

[tool.hatch.version]
source = "vcs"

[tool.hatch.build.hooks.vcs]
version-file = "src/synoptic/_version.py"

[tool.hatch.build.targets.sdist]
exclude = ["/.github", "/docs", "/11ty-site", "/metars", "/notebooks"]

[tool.hatch.build.targets.wheel]
packages = ["src/synoptic"]

[tool.ruff]
extend-include = ["*.ipynb"]

[tool.ruff.lint]
extend-select = [
    "UP", # pyupgrade
    "D",  # pydocstyle
]

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.pytest.ini_options]
minversion = "2.0"
addopts = "-rsfEX -p pytester --strict-markers --verbosity=3 --cov=synoptic"
log_level = "DEBUG"
testpaths = ["tests"]
xfail_strict = true
markers = []
