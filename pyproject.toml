[project]
name = "SynopticPy"
description = "Load mesonet weather and environmental data from the Synoptic API into a Pandas Dataframe."
readme = "README.md"
requires-python = ">=3.9"
license = { file = "LICENSE" }
authors = [{ name = "Brian K. Blaylock", email = "blaylockbk@gmail.com" }]
maintainers = [{ name = "Brian K. Blaylock", email = "blaylockbk@gmail.com" }]
classifiers = [
    "Development Status :: 4 - Beta",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Operating System :: MacOS",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX :: Linux",
    "License :: OSI Approved :: MIT License",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Atmospheric Science",
]
keywords = [
    "weather",
    "meteorology",
    "mesonet",
    "atmosphere",
]
dependencies = [
    "matplotlib",
    "numpy",
    "pandas",
    "requests",
    "toml",
]
dynamic = ["version"]

[project.urls]
"Homepage" = "https://github.com/blaylockbk/SynopticPy"
"Documentation" = "https://synopticpy.readthedocs.io/"
"Repository" = "https://github.com/blaylockbk/SynopticPy"
"Changelog" = "https://github.com/blaylockbk/SynopticPy/releases"
"Bug Tracker" = "https://github.com/blaylockbk/SynopticPy/issues"

[project.optional-dependencies]
docs = [
    "autodocsumm",
    "linkify-it-py",
    "myst-parser",
    "nbconvert",
    "nbsphinx",
    "sphinx-copybutton",
    "pydata-sphinx-theme",
    "recommonmark",
    "sphinx",
    "sphinx-autosummary-accessors",
    "sphinx-design",
    "sphinx-markdown-tables",
    "sphinxcontrib-mermaid",
]
test = ["pytest", "ruff"]

[build-system]
requires = ["setuptools>=42", "wheel", "setuptools_scm[toml]>=3.4"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
packages = ["synoptic"]

[tool.setuptools_scm]
version_scheme = "post-release"
local_scheme = "no-local-version"
write_to = "synoptic/_version.py"

[tool.ruff]
extend-include = ["*.ipynb"]

[tool.ruff.lint]
extend-select = [
    "UP", # pyupgrade
    "D", # pydocstyle

]

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.isort]
profile = "black"

[tool.pytest.ini_options]
minversion = "2.0"
addopts = "-rsfEX -p pytester --strict-markers --verbosity=3"
log_level = "DEBUG"
testpaths = ["tests"]
xfail_strict = true
markers = []
